{"title":"Javascript 动手学（1）- Javascript 简介","uid":"7bbd0dd3859c0d14236fdbde3c410ddb","slug":"JavaScript-动手学-1","date":"2019-10-08T07:44:10.000Z","updated":"2021-08-19T08:50:21.707Z","comments":true,"path":"api/articles/JavaScript-动手学-1.json","keywords":null,"cover":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q97aza64off758w3wfdo.jpg","content":"<p><a href=\"https://www.codecademy.com/\">Codecademy</a> Javascript 教程学习笔记</p>\n<hr>\n<h1 id=\"Console（控制台）\"><a href=\"#Console（控制台）\" class=\"headerlink\" title=\"Console（控制台）\"></a>Console（控制台）</h1><p>控制台为显示重要信息的面板，使用 <code>console.log</code> 方法将信息打印到控制台上。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">console.log(5); </code></pre>\n\n<p>此处，分号表示一行的结尾。注意 Javascript 语言区分大小写。</p>\n<h1 id=\"Comments（注释）\"><a href=\"#Comments（注释）\" class=\"headerlink\" title=\"Comments（注释）\"></a>Comments（注释）</h1><p>Javascript 中包含2种注释方式：</p>\n<ol>\n<li><em>单行注释</em>：在注释行前插入双斜线 <code>//</code>。<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; 输出 5 到控制台\nconsole.log(5);</code></pre>\n也可以在代码之后注释：<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">console.log(5);  &#x2F;&#x2F; 输出 5 </code></pre></li>\n<li><em>多行注释</em>：在多行注释前插入 <code>/*</code>，在结尾处插入 <code>*/</code>。<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;*\n所有内容都被注释 \nconsole.log(10);\n没有一句代码会被运行！\nconsole.log(99);\n*&#x2F;</code></pre>\n也可以使用此语法将代码中的一部分注释掉：<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">console.log(&#x2F;*无视!*&#x2F; 5);  &#x2F;&#x2F; 依然输出 5 </code></pre></li>\n</ol>\n<h1 id=\"Data-Types（数据格式）\"><a href=\"#Data-Types（数据格式）\" class=\"headerlink\" title=\"Data Types（数据格式）\"></a>Data Types（数据格式）</h1><p>Javascript 包含7种基本数据格式：</p>\n<ol>\n<li><em>Number（数字）</em>。包含各种数字，包括小数：<code>8</code>，<code>1516</code>，<code>23.42</code>。</li>\n<li><em>String（字符串）</em>。包含一组字符，用单引号 <code>&#39;...&#39;</code> 或双引号 <code>&quot;...&quot;</code> 括起来。</li>\n<li><em>Boolean（布尔值）</em>。<code>true</code> 和 <code>false</code>。</li>\n<li><em>Null（空值）</em>。代码中用 <code>null</code> 表示。</li>\n<li><em>Undefined（缺省值）</em>。与 <code>null</code> 类似表示缺失的值，但用处不同。代码中用 <code>undefined</code> 表示。</li>\n<li><em>Symbol（标志）</em>。包含特殊的标识符，通常用在复杂代码中。</li>\n<li><em>Object（对象）</em>。</li>\n</ol>\n<p>前6种为基本数据结构。</p>\n<h1 id=\"Arithmetic-Operators（数学运算符）\"><a href=\"#Arithmetic-Operators（数学运算符）\" class=\"headerlink\" title=\"Arithmetic Operators（数学运算符）\"></a>Arithmetic Operators（数学运算符）</h1><p>Javascript 内建的数学运算符包含：</p>\n<ol>\n<li>加：<code>+</code></li>\n<li>减：<code>-</code></li>\n<li>乘：<code>*</code></li>\n<li>除：<code>/</code></li>\n<li>取余：<code>%</code></li>\n</ol>\n<h2 id=\"String-Concatenation（连接字符串）\"><a href=\"#String-Concatenation（连接字符串）\" class=\"headerlink\" title=\"String Concatenation（连接字符串）\"></a>String Concatenation（连接字符串）</h2><p>使用 <code>+</code> 连接2个独立的字符串：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">console.log(&#39;hi&#39; + &#39;ya&#39;); &#x2F;&#x2F; 输出 &#39;hiya&#39;\nconsole.log(&#39;wo&#39; + &#39;ah&#39;); &#x2F;&#x2F; 输出 &#39;woah&#39;\nconsole.log(&#39;I love to &#39; + &#39;code.&#39;)\n&#x2F;&#x2F; 输出 &#39;I love to code.&#39;</code></pre>\n\n<p>可以用多个运算符连接多个字符串：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">console.log(&#39;One&#39; + &#39;, &#39; + &#39;two&#39; + &#39;, &#39; + &#39;three!&#39;); \n&#x2F;&#x2F; 输出 &#39;One, two, three!&#39;</code></pre>\n\n<h1 id=\"Properties（属性）\"><a href=\"#Properties（属性）\" class=\"headerlink\" title=\"Properties（属性）\"></a>Properties（属性）</h1><p>创建的字符串实例自带一个属性叫 <code>length</code>，即返回该字符串的长度：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">console.log(&#39;Hello&#39;.length); &#x2F;&#x2F; 输出 5</code></pre>\n\n<h1 id=\"Methods（方法）\"><a href=\"#Methods（方法）\" class=\"headerlink\" title=\"Methods（方法）\"></a>Methods（方法）</h1><p>字符串实例自带的其中两个方法包括 <code>.toUpperCase()</code>（将所有字符转换为大写，返回一个字符串）和 <code>.startsWith()</code>（检测字符串的起始字符，返回一个布尔值）：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">console.log(&#39;hello&#39;.toUpperCase()); &#x2F;&#x2F; 输出 &#39;HELLO&#39;\nconsole.log(&#39;Hey&#39;.startsWith(&#39;H&#39;)); &#x2F;&#x2F; 输出 true</code></pre>\n\n<p>在 <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/prototype\">JavaScript 文档</a>中可以查看更多的字符串内建方法。</p>\n<h1 id=\"Built-in-Objects（内建对象）\"><a href=\"#Built-in-Objects（内建对象）\" class=\"headerlink\" title=\"Built-in Objects（内建对象）\"></a>Built-in Objects（内建对象）</h1><p>除 <code>console</code> 外，Javascript 还包含<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\">其他内建对象</a>。例如，对于复杂数学运算，可使用内建的 <code>Math</code> 对象，可调用其 <code>.random()</code> 方法，用来输出0-1中的一个随机数：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">console.log(Math.random()); &#x2F;&#x2F; 输出0-1中的一个随机数</code></pre>\n\n<p>若想获取0-50中的一个随机数，可以将 <code>Math.random()</code> 的结果乘以50：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">Math.random() * 50;</code></pre>\n\n<p>上例中，其结果可能不是整数。可以使用 <code>Math.floor()</code> 方法返回一个临近该结果的整数。</p>\n<p><code>Math</code> 对象的其他方法可参考<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math\">此处</a>。</p>\n","text":"Codecademy Javascript 教程学习笔记 Console（控制台）控制台为显示重要信息的面板，使用 console.log 方法将信息打印到控制台上。 console.log(5); 此处，分号表示一行的结尾。注意 Javascript 语言区分大小写。 Comm...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"动手学","slug":"动手学","count":12,"path":"api/categories/动手学.json"},{"name":"Javascript","slug":"动手学/Javascript","count":1,"path":"api/categories/动手学/Javascript.json"}],"tags":[{"name":"动手学","slug":"动手学","count":11,"path":"api/tags/动手学.json"},{"name":"Javascript","slug":"Javascript","count":1,"path":"api/tags/Javascript.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Console%EF%BC%88%E6%8E%A7%E5%88%B6%E5%8F%B0%EF%BC%89\"><span class=\"toc-text\">Console（控制台）</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Comments%EF%BC%88%E6%B3%A8%E9%87%8A%EF%BC%89\"><span class=\"toc-text\">Comments（注释）</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Data-Types%EF%BC%88%E6%95%B0%E6%8D%AE%E6%A0%BC%E5%BC%8F%EF%BC%89\"><span class=\"toc-text\">Data Types（数据格式）</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Arithmetic-Operators%EF%BC%88%E6%95%B0%E5%AD%A6%E8%BF%90%E7%AE%97%E7%AC%A6%EF%BC%89\"><span class=\"toc-text\">Arithmetic Operators（数学运算符）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#String-Concatenation%EF%BC%88%E8%BF%9E%E6%8E%A5%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%89\"><span class=\"toc-text\">String Concatenation（连接字符串）</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Properties%EF%BC%88%E5%B1%9E%E6%80%A7%EF%BC%89\"><span class=\"toc-text\">Properties（属性）</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Methods%EF%BC%88%E6%96%B9%E6%B3%95%EF%BC%89\"><span class=\"toc-text\">Methods（方法）</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Built-in-Objects%EF%BC%88%E5%86%85%E5%BB%BA%E5%AF%B9%E8%B1%A1%EF%BC%89\"><span class=\"toc-text\">Built-in Objects（内建对象）</span></a></li></ol>","author":{"name":"Ryanhui","slug":"blog-author","avatar":"https://avatars1.githubusercontent.com/u/43368274?s=460&u=50a78f666213a52518d0076c1ca1cd9862076167&v=4","link":"/","description":"写博客，不过是孤芳自赏","socials":{"github":"https://github.com/Ranhuiryan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/wbgjh","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/5472735"},"researchgate":{"icon":"/svg/researchgate.svg","link":"https://www.researchgate.net/profile/Guo-Jihong"}}}},"mapped":true,"prev_post":{"title":"HTML 动手学（4）","uid":"f68d9754919b32dedba42fbafa34963c","slug":"HTML-动手学（4）","date":"2019-10-10T07:02:02.000Z","updated":"2021-08-19T08:49:50.893Z","comments":true,"path":"api/articles/HTML-动手学（4）.json","keywords":null,"cover":"https://paradacreativa.es/wp-content/uploads/2019/12/C%C3%B3mo-abrir-archivos-HTML-foto.jpg","text":"Codecademy HTML 教程学习笔记 Images（图片）使用 &lt;img&gt; 标识符向网页中添加图片。 注意，&lt;img&gt; 是自闭合标识符，在 &lt;img&gt; 标识符后包含一条斜线 /。自闭合标识符后面的 / 可以忽略。 &lt;img src...","link":"","photos":[],"count_time":{"symbolsCount":920,"symbolsTime":"1 mins."},"categories":[{"name":"动手学","slug":"动手学","count":12,"path":"api/categories/动手学.json"},{"name":"HTML","slug":"动手学/HTML","count":7,"path":"api/categories/动手学/HTML.json"}],"tags":[{"name":"动手学","slug":"动手学","count":11,"path":"api/tags/动手学.json"},{"name":"HTML","slug":"HTML","count":7,"path":"api/tags/HTML.json"},{"name":"前端开发","slug":"前端开发","count":7,"path":"api/tags/前端开发.json"}],"author":{"name":"Ryanhui","slug":"blog-author","avatar":"https://avatars1.githubusercontent.com/u/43368274?s=460&u=50a78f666213a52518d0076c1ca1cd9862076167&v=4","link":"/","description":"写博客，不过是孤芳自赏","socials":{"github":"https://github.com/Ranhuiryan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/wbgjh","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/5472735"},"researchgate":{"icon":"/svg/researchgate.svg","link":"https://www.researchgate.net/profile/Guo-Jihong"}}}}},"next_post":{"title":"Debian 9 远程服务器搭建和应用踩坑实录","uid":"8999d7cf837e7c1b6f9d05e36d4f5aae","slug":"CentOS-7-远程服务器搭建和应用踩坑实录","date":"2019-08-04T02:45:21.000Z","updated":"2021-08-19T08:44:30.434Z","comments":true,"path":"api/articles/CentOS-7-远程服务器搭建和应用踩坑实录.json","keywords":null,"cover":"https://image-assets.mihuashi.com/2021/08/18/20/FpXdKH9ZMoiu-PVnzCIoeHRcR2gn.png","text":" 麻麻再也不用担心我用科学上网啦 =￣ω￣= 本实录均基于 Vultr 日本节点 CentOS 7.5 x64 服务器搭建运行实际效果总结得出，可能无法代表不同地区不同系统的服务器节点的运行效果。 连接服务器：Xshell，Putty可以在官网上注册获取 Xshell 的免费版本...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"技术","slug":"技术","count":2,"path":"api/categories/技术.json"}],"tags":[{"name":"Linux","slug":"Linux","count":1,"path":"api/tags/Linux.json"},{"name":"MariaSQL","slug":"MariaSQL","count":1,"path":"api/tags/MariaSQL.json"},{"name":"网络技术","slug":"网络技术","count":2,"path":"api/tags/网络技术.json"},{"name":"科学使用","slug":"科学使用","count":1,"path":"api/tags/科学使用.json"}],"author":{"name":"Ryanhui","slug":"blog-author","avatar":"https://avatars1.githubusercontent.com/u/43368274?s=460&u=50a78f666213a52518d0076c1ca1cd9862076167&v=4","link":"/","description":"写博客，不过是孤芳自赏","socials":{"github":"https://github.com/Ranhuiryan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/wbgjh","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/5472735"},"researchgate":{"icon":"/svg/researchgate.svg","link":"https://www.researchgate.net/profile/Guo-Jihong"}}}}}}