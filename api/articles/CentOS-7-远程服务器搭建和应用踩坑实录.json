{"title":"Debian 9 远程服务器搭建和应用踩坑实录","uid":"8999d7cf837e7c1b6f9d05e36d4f5aae","slug":"CentOS-7-远程服务器搭建和应用踩坑实录","date":"2019-08-04T02:45:21.000Z","updated":"2021-08-19T08:44:30.434Z","comments":true,"path":"api/articles/CentOS-7-远程服务器搭建和应用踩坑实录.json","keywords":null,"cover":"https://image-assets.mihuashi.com/2021/08/18/20/FpXdKH9ZMoiu-PVnzCIoeHRcR2gn.png","content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>麻麻再也不用担心我用科学上网啦 =￣ω￣=</p></blockquote>\n<p>本实录均基于 Vultr 日本节点 CentOS 7.5 x64 服务器搭建运行实际效果总结得出，可能无法代表不同地区不同系统的服务器节点的运行效果。</p>\n<hr>\n<h1 id=\"连接服务器：Xshell，Putty\"><a href=\"#连接服务器：Xshell，Putty\" class=\"headerlink\" title=\"连接服务器：Xshell，Putty\"></a>连接服务器：Xshell，Putty</h1><p>可以在官网上注册获取 <a href=\"https://www.netsarang.com/en/free-for-home-school/\">Xshell</a> 的免费版本，也可以使用 <a href=\"https://www.putty.org/\">Putty</a> 作为代替。</p>\n<h2 id=\"登录\"><a href=\"#登录\" class=\"headerlink\" title=\"登录\"></a>登录</h2><p>使用 Xshell 第一次连接服务器时需要输入 VPS 运营商给出的用户密码，可以保存登录凭证，重新连接服务器时无需再次输入密码。Putty 每次登陆时都需要输入密码。</p>\n<p>使用 Putty 时，长时间没有更新的会话会自动断联，可以通过在 Connection 选项卡中设置定时向服务器发送空数据包，避免长时间不用反复重连。</p>\n<p><img src=\"CentOS-7-%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E5%92%8C%E5%BA%94%E7%94%A8%E8%B8%A9%E5%9D%91%E5%AE%9E%E5%BD%95/20180609012635632.png\"></p>\n<h2 id=\"注销\"><a href=\"#注销\" class=\"headerlink\" title=\"注销\"></a>注销</h2><p>结束操作后一定要注销会话，避免服务器账户还在登录的状态，占用服务器资源。</p>\n<p>在 Xshell 或者 Putty 中均可按快捷键 <code>ctrl+d</code> 快速结束访问。</p>\n<h1 id=\"内网穿透：Frp\"><a href=\"#内网穿透：Frp\" class=\"headerlink\" title=\"内网穿透：Frp\"></a>内网穿透：Frp</h1><p>Frp 是一个高性能的反向代理应用，可以帮助您轻松地进行内网穿透，对外网提供服务，支持 tcp, http, https 等协议类型，并且 web 服务支持根据域名进行路由转发。</p>\n<h2 id=\"服务端部署：Frps\"><a href=\"#服务端部署：Frps\" class=\"headerlink\" title=\"服务端部署：Frps\"></a>服务端部署：Frps</h2><p><a href=\"https://github.com/MvsCode/frp-onekey\">一键配置脚本</a></p>\n<p>配置说明：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">Please input frps bind_port [1-65535](Default Server Port: 5443): #输入frp提供服务的端口，用于服务器端和客户端通信，默认即可\nPlease input frps vhost_http_port [1-65535](Default vhost_http_port: 80): #输入frp进行http穿透的http服务端口，建议不用默认\nPlease input frps vhost_https_port [1-65535](Default vhost_https_port: 443): #输入frp进行https穿透的https服务端口，建议不用默认\nPlease input frps dashboard_port [1-65535](Default dashboard_port: 6443):#输入frp的控制台服务端口，用于查看frp工作状态，默认即可\nPlease input dashboard_user (Default: admin):#登录控制台的用户名，默认即可\nPlease input dashboard_pwd (Default: kpkpM7VZ):#登录控制台的密码，如果记不住默认的建议修改\nPlease input privilege_token (Default: 9m2UAOWa6hx5Eise):#输入frp服务器和客户端通信的密码，默认是随机生成的，默认即可\nPlease input frps max_pool_count [1-200](Default max_pool_count: 50):#设置每个代理可以创建的连接池上限，默认50\n&#x3D;&#x3D;&#x3D;&#x3D; Please select log_level &#x3D;&#x3D;&#x3D;&#x3D;\n1: info\n2: warn\n3: error\n4: debug\n&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\nEnter your choice (1, 2, 3, 4 or exit. default [1]): #默认即可\nPlease input frps log_max_days [1-30](Default log_max_days: 3 day):\n&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; Please select log_file &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\n1: enable\n2: disable\n&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\nEnter your choice (1, 2 or exit. default [1]):#默认即可</code></pre>\n\n<p>CentOS 下需要运行以下指令打开服务器防火墙端口 6443（Debian 默认开放防火墙，如果无法访问端口请查看服务器运行商网站控制台，编辑安全组策略）：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 开启6443端口\nfirewall-cmd --zone&#x3D;public --add-port&#x3D;6443&#x2F;tcp --permanent\nfirewall-cmd --reload # 重启防火墙\nfirewall-cmd --list-ports # 查看已开放端口\n# 如果需要测试，可以尝试以下命令\nsystemctl stop firewalld.service # 停止防火墙\nsystemctl disable firewalld.service # 禁止防火墙开机启动\n# 关闭已开放的端口\nfirewall-cmd --zone&#x3D;public --remove-port&#x3D;80&#x2F;tcp --permanent</code></pre>\n\n<p>在浏览器中打开 <code>服务器ip:6443</code>，输入控制台用户名和密码。如果可以进入控制台面板，表示 frps 部署成功，可以使用了。</p>\n<h2 id=\"客户端部署：Frpc\"><a href=\"#客户端部署：Frpc\" class=\"headerlink\" title=\"客户端部署：Frpc\"></a>客户端部署：Frpc</h2><p>在需要穿透的内网机器（Windows 远程桌面为例）上下载对应操作系统和版本的 <a href=\"https://github.com/fatedier/frp/releases\">Frp</a>，在 frpc.ini 中配置：</p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\">[common]\nserver_addr &#x3D; 0.0.0.0 # 服务器地址\nserver_port &#x3D; 5443 # frp 提供服务的端口\nprotocol &#x3D; tcp # 连接协议，可选 tcp&#x2F;kcp\ntoken &#x3D; 12345678 # 认证用\n\n[RDP] # 代理名称，可随意设置\ntype &#x3D; tcp # 协议，可选 tcp&#x2F;udp\nlocal_ip &#x3D; 127.0.0.1\nlocal_port &#x3D; 3389 # Windows 远程桌面端口\n# if remote_port is 0, frps will assign a random port for you\nremote_port &#x3D; 6000</code></pre>\n\n<p>在 cmd 中 cd 到 frpc 文件目录下，执行 <code>frpc -c frpc.ini</code>（Powershell 中执行 <code>./frpc -c ./frpc.ini</code>），并确认服务器端 6000 端口已开放。此时在另一台电脑下打开 Remote Desktop，输入 <code>服务器ip:6000</code>，即可访问远程桌面。</p>\n<h1 id=\"科学上网：v2ray\"><a href=\"#科学上网：v2ray\" class=\"headerlink\" title=\"科学上网：v2ray\"></a>科学上网：v2ray</h1><h2 id=\"Linux-安装脚本\"><a href=\"#Linux-安装脚本\" class=\"headerlink\" title=\"Linux 安装脚本\"></a>Linux 安装脚本</h2><p>V2Ray 提供了一个在 Linux 中的自动化安装脚本。这个脚本会自动检测有没有安装过 V2Ray，如果没有，则进行完整的安装和配置；如果之前安装过 V2Ray，则只更新 V2Ray 二进制程序而不更新配置。</p>\n<p>以下指令假设已在 su 环境下，如果不是，请先运行 sudo su。</p>\n<p>运行下面的指令下载并安装 V2Ray。当 yum 或 apt-get 可用的情况下，此脚本会自动安装 unzip 和 daemon。这两个组件是安装 V2Ray 的必要组件。如果你使用的系统不支持 yum 或 apt-get，请自行安装 unzip 和 daemon。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">bash &lt;(curl -L -s https:&#x2F;&#x2F;install.direct&#x2F;go.sh)</code></pre>\n\n<p>此脚本会配置自动运行脚本。自动运行脚本会在系统重启之后，自动运行 V2Ray。脚本运行完成后，你需要：</p>\n<ol>\n<li>编辑 /etc/v2ray/config.json 文件来配置你需要的代理方式；</li>\n<li>运行 service v2ray start 来启动 V2Ray 进程；</li>\n<li>之后可以使用 service v2ray start|stop|status|reload|restart|force-reload 控制 V2Ray 的运行。</li>\n</ol>\n","text":" 麻麻再也不用担心我用科学上网啦 =￣ω￣= 本实录均基于 Vultr 日本节点 CentOS 7.5 x64 服务器搭建运行实际效果总结得出，可能无法代表不同地区不同系统的服务器节点的运行效果。 连接服务器：Xshell，Putty可以在官网上注册获取 Xshell 的免费版本...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"技术","slug":"技术","count":2,"path":"api/categories/技术.json"}],"tags":[{"name":"Linux","slug":"Linux","count":1,"path":"api/tags/Linux.json"},{"name":"MariaSQL","slug":"MariaSQL","count":1,"path":"api/tags/MariaSQL.json"},{"name":"网络技术","slug":"网络技术","count":2,"path":"api/tags/网络技术.json"},{"name":"科学使用","slug":"科学使用","count":1,"path":"api/tags/科学使用.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%BF%9E%E6%8E%A5%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%9AXshell%EF%BC%8CPutty\"><span class=\"toc-text\">连接服务器：Xshell，Putty</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%99%BB%E5%BD%95\"><span class=\"toc-text\">登录</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E9%94%80\"><span class=\"toc-text\">注销</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%EF%BC%9AFrp\"><span class=\"toc-text\">内网穿透：Frp</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9C%8D%E5%8A%A1%E7%AB%AF%E9%83%A8%E7%BD%B2%EF%BC%9AFrps\"><span class=\"toc-text\">服务端部署：Frps</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%83%A8%E7%BD%B2%EF%BC%9AFrpc\"><span class=\"toc-text\">客户端部署：Frpc</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%EF%BC%9Av2ray\"><span class=\"toc-text\">科学上网：v2ray</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Linux-%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">Linux 安装脚本</span></a></li></ol></li></ol>","author":{"name":"Ryanhui","slug":"blog-author","avatar":"https://avatars1.githubusercontent.com/u/43368274?s=460&u=50a78f666213a52518d0076c1ca1cd9862076167&v=4","link":"/","description":"写博客，不过是孤芳自赏","socials":{"github":"https://github.com/Ranhuiryan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/wbgjh","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/5472735"}}}},"mapped":true,"prev_post":{"title":"Javascript 动手学（1）- Javascript 简介","uid":"7bbd0dd3859c0d14236fdbde3c410ddb","slug":"JavaScript-动手学-1","date":"2019-10-08T07:44:10.000Z","updated":"2021-08-19T08:50:21.707Z","comments":true,"path":"api/articles/JavaScript-动手学-1.json","keywords":null,"cover":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q97aza64off758w3wfdo.jpg","text":"Codecademy Javascript 教程学习笔记 Console（控制台）控制台为显示重要信息的面板，使用 console.log 方法将信息打印到控制台上。 console.log(5); 此处，分号表示一行的结尾。注意 Javascript 语言区分大小写。 Comm...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"动手学","slug":"动手学","count":11,"path":"api/categories/动手学.json"},{"name":"Javascript","slug":"动手学/Javascript","count":1,"path":"api/categories/动手学/Javascript.json"}],"tags":[{"name":"动手学","slug":"动手学","count":11,"path":"api/tags/动手学.json"},{"name":"Javascript","slug":"Javascript","count":1,"path":"api/tags/Javascript.json"}],"author":{"name":"Ryanhui","slug":"blog-author","avatar":"https://avatars1.githubusercontent.com/u/43368274?s=460&u=50a78f666213a52518d0076c1ca1cd9862076167&v=4","link":"/","description":"写博客，不过是孤芳自赏","socials":{"github":"https://github.com/Ranhuiryan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/wbgjh","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/5472735"}}}}},"next_post":{"title":"Anaconda 虚拟环境配置和使用","uid":"9cf1570f7db7f75fb8362c869acb770d","slug":"Anaconda-虚拟环境配置和使用","date":"2019-07-25T08:58:03.000Z","updated":"2021-08-23T01:51:10.839Z","comments":true,"path":"api/articles/Anaconda-虚拟环境配置和使用.json","keywords":null,"cover":"https://images.squarespace-cdn.com/content/v1/5c424876ec4eb79a39b15a3a/badd4bf6-186f-4a36-ba44-b7d45e03e720/AnacondaCON_2021_logo_FINAL_withshadow.png","text":"转自：cnblog，CSDN Conda 环境管理创建环境使用 conda create 命令，后边跟上你希望用来称呼它的任何名字： conda create --name snowflakes biopython 这条命令将会在 Anaconda3/envs/snowflake...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"Python","slug":"Python","count":1,"path":"api/categories/Python.json"}],"tags":[{"name":"Anaconda","slug":"Anaconda","count":1,"path":"api/tags/Anaconda.json"},{"name":"Python","slug":"Python","count":1,"path":"api/tags/Python.json"}],"author":{"name":"Ryanhui","slug":"blog-author","avatar":"https://avatars1.githubusercontent.com/u/43368274?s=460&u=50a78f666213a52518d0076c1ca1cd9862076167&v=4","link":"/","description":"写博客，不过是孤芳自赏","socials":{"github":"https://github.com/Ranhuiryan","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/wbgjh","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/5472735"}}}}}}